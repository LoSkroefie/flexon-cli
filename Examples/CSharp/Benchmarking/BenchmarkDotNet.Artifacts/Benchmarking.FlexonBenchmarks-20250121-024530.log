// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a
// command took 3.44s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a
// command took 7.48s and exited with 0
// ***** Done, took 00:00:11 (11.13 sec)   *****
// Found 6 benchmarks:
//   FlexonBenchmarks.JsonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
//   FlexonBenchmarks.JsonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 952 1792 --benchmarkName Benchmarking.FlexonBenchmarks.JsonSerialize --job Default --benchmarkId 0 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 309600.00 ns, 309.6000 us/op
WorkloadJitting  1: 1 op, 10461500.00 ns, 10.4615 ms/op

OverheadJitting  2: 16 op, 342000.00 ns, 21.3750 us/op
WorkloadJitting  2: 16 op, 86381700.00 ns, 5.3989 ms/op

WorkloadPilot    1: 16 op, 67478100.00 ns, 4.2174 ms/op
WorkloadPilot    2: 32 op, 131541300.00 ns, 4.1107 ms/op
WorkloadPilot    3: 64 op, 319453300.00 ns, 4.9915 ms/op
WorkloadPilot    4: 128 op, 364772100.00 ns, 2.8498 ms/op
WorkloadPilot    5: 256 op, 633157100.00 ns, 2.4733 ms/op

OverheadWarmup   1: 256 op, 3300.00 ns, 12.8906 ns/op
OverheadWarmup   2: 256 op, 1500.00 ns, 5.8594 ns/op
OverheadWarmup   3: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadWarmup   4: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadWarmup   5: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadWarmup   6: 256 op, 2300.00 ns, 8.9844 ns/op

OverheadActual   1: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadActual   2: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadActual   3: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual   4: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   5: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual   6: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadActual   7: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   8: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   9: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  10: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  11: 256 op, 2300.00 ns, 8.9844 ns/op
OverheadActual  12: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual  13: 256 op, 3800.00 ns, 14.8438 ns/op
OverheadActual  14: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  15: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  16: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  17: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  18: 256 op, 2400.00 ns, 9.3750 ns/op
OverheadActual  19: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  20: 256 op, 1700.00 ns, 6.6406 ns/op

WorkloadWarmup   1: 256 op, 611591800.00 ns, 2.3890 ms/op
WorkloadWarmup   2: 256 op, 607078900.00 ns, 2.3714 ms/op
WorkloadWarmup   3: 256 op, 607310100.00 ns, 2.3723 ms/op
WorkloadWarmup   4: 256 op, 611551500.00 ns, 2.3889 ms/op
WorkloadWarmup   5: 256 op, 607168000.00 ns, 2.3718 ms/op
WorkloadWarmup   6: 256 op, 608354700.00 ns, 2.3764 ms/op
WorkloadWarmup   7: 256 op, 618101500.00 ns, 2.4145 ms/op
WorkloadWarmup   8: 256 op, 628923900.00 ns, 2.4567 ms/op
WorkloadWarmup   9: 256 op, 618372900.00 ns, 2.4155 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 638158500.00 ns, 2.4928 ms/op
WorkloadActual   2: 256 op, 615466900.00 ns, 2.4042 ms/op
WorkloadActual   3: 256 op, 617611700.00 ns, 2.4125 ms/op
WorkloadActual   4: 256 op, 644454400.00 ns, 2.5174 ms/op
WorkloadActual   5: 256 op, 630422800.00 ns, 2.4626 ms/op
WorkloadActual   6: 256 op, 640827800.00 ns, 2.5032 ms/op
WorkloadActual   7: 256 op, 613616100.00 ns, 2.3969 ms/op
WorkloadActual   8: 256 op, 625201000.00 ns, 2.4422 ms/op
WorkloadActual   9: 256 op, 614017200.00 ns, 2.3985 ms/op
WorkloadActual  10: 256 op, 621198200.00 ns, 2.4266 ms/op
WorkloadActual  11: 256 op, 688488500.00 ns, 2.6894 ms/op
WorkloadActual  12: 256 op, 613805900.00 ns, 2.3977 ms/op
WorkloadActual  13: 256 op, 628834800.00 ns, 2.4564 ms/op
WorkloadActual  14: 256 op, 614643700.00 ns, 2.4010 ms/op
WorkloadActual  15: 256 op, 618587600.00 ns, 2.4164 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 638156750.00 ns, 2.4928 ms/op
WorkloadResult   2: 256 op, 615465150.00 ns, 2.4042 ms/op
WorkloadResult   3: 256 op, 617609950.00 ns, 2.4125 ms/op
WorkloadResult   4: 256 op, 644452650.00 ns, 2.5174 ms/op
WorkloadResult   5: 256 op, 630421050.00 ns, 2.4626 ms/op
WorkloadResult   6: 256 op, 640826050.00 ns, 2.5032 ms/op
WorkloadResult   7: 256 op, 613614350.00 ns, 2.3969 ms/op
WorkloadResult   8: 256 op, 625199250.00 ns, 2.4422 ms/op
WorkloadResult   9: 256 op, 614015450.00 ns, 2.3985 ms/op
WorkloadResult  10: 256 op, 621196450.00 ns, 2.4265 ms/op
WorkloadResult  11: 256 op, 613804150.00 ns, 2.3977 ms/op
WorkloadResult  12: 256 op, 628833050.00 ns, 2.4564 ms/op
WorkloadResult  13: 256 op, 614641950.00 ns, 2.4009 ms/op
WorkloadResult  14: 256 op, 618585850.00 ns, 2.4164 ms/op
// GC:  25 25 25 91015560 256
// Threading:  0 0 256

// AfterAll
// Benchmark Process 13204 has exited with code 0.

Mean = 2.438 ms, StdErr = 0.011 ms (0.46%), N = 14, StdDev = 0.042 ms
Min = 2.397 ms, Q1 = 2.402 ms, Median = 2.421 ms, Q3 = 2.461 ms, Max = 2.517 ms
IQR = 0.059 ms, LowerFence = 2.313 ms, UpperFence = 2.550 ms
ConfidenceInterval = [2.390 ms; 2.485 ms] (CI 99.9%), Margin = 0.048 ms (1.95% of Mean)
Skewness = 0.63, Kurtosis = 1.8, MValue = 2

// ** Remained 5 (83.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 588 584 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerialize --job Default --benchmarkId 1 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 323400.00 ns, 323.4000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 63
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 519
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 376
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 12600 has exited with code -1.

// ** Remained 4 (66.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 1000 1188 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted --job Default --benchmarkId 2 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 292200.00 ns, 292.2000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 69
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 719
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 576
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 6208 has exited with code -1.

// ** Remained 3 (50.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 588 1280 --benchmarkName Benchmarking.FlexonBenchmarks.JsonDeserialize --job Default --benchmarkId 3 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 289300.00 ns, 289.3000 us/op
WorkloadJitting  1: 1 op, 7064900.00 ns, 7.0649 ms/op

OverheadJitting  2: 16 op, 306700.00 ns, 19.1687 us/op
WorkloadJitting  2: 16 op, 111056100.00 ns, 6.9410 ms/op

WorkloadPilot    1: 16 op, 104971700.00 ns, 6.5607 ms/op
WorkloadPilot    2: 32 op, 234132800.00 ns, 7.3167 ms/op
WorkloadPilot    3: 64 op, 473578400.00 ns, 7.3997 ms/op
WorkloadPilot    4: 128 op, 592598000.00 ns, 4.6297 ms/op

OverheadWarmup   1: 128 op, 2400.00 ns, 18.7500 ns/op
OverheadWarmup   2: 128 op, 1500.00 ns, 11.7188 ns/op
OverheadWarmup   3: 128 op, 1800.00 ns, 14.0625 ns/op
OverheadWarmup   4: 128 op, 1600.00 ns, 12.5000 ns/op
OverheadWarmup   5: 128 op, 1600.00 ns, 12.5000 ns/op
OverheadWarmup   6: 128 op, 3000.00 ns, 23.4375 ns/op

OverheadActual   1: 128 op, 1500.00 ns, 11.7188 ns/op
OverheadActual   2: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual   3: 128 op, 2100.00 ns, 16.4062 ns/op
OverheadActual   4: 128 op, 2600.00 ns, 20.3125 ns/op
OverheadActual   5: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual   6: 128 op, 1200.00 ns, 9.3750 ns/op
OverheadActual   7: 128 op, 1200.00 ns, 9.3750 ns/op
OverheadActual   8: 128 op, 1500.00 ns, 11.7188 ns/op
OverheadActual   9: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual  10: 128 op, 1500.00 ns, 11.7188 ns/op
OverheadActual  11: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual  12: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual  13: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual  14: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual  15: 128 op, 1900.00 ns, 14.8438 ns/op
OverheadActual  16: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual  17: 128 op, 5100.00 ns, 39.8438 ns/op
OverheadActual  18: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual  19: 128 op, 1600.00 ns, 12.5000 ns/op
OverheadActual  20: 128 op, 1500.00 ns, 11.7188 ns/op

WorkloadWarmup   1: 128 op, 512941000.00 ns, 4.0074 ms/op
WorkloadWarmup   2: 128 op, 500236700.00 ns, 3.9081 ms/op
WorkloadWarmup   3: 128 op, 497118200.00 ns, 3.8837 ms/op
WorkloadWarmup   4: 128 op, 501908200.00 ns, 3.9212 ms/op
WorkloadWarmup   5: 128 op, 495191800.00 ns, 3.8687 ms/op
WorkloadWarmup   6: 128 op, 498150500.00 ns, 3.8918 ms/op
WorkloadWarmup   7: 128 op, 491204200.00 ns, 3.8375 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 498019900.00 ns, 3.8908 ms/op
WorkloadActual   2: 128 op, 501883500.00 ns, 3.9210 ms/op
WorkloadActual   3: 128 op, 494296200.00 ns, 3.8617 ms/op
WorkloadActual   4: 128 op, 491639900.00 ns, 3.8409 ms/op
WorkloadActual   5: 128 op, 488295400.00 ns, 3.8148 ms/op
WorkloadActual   6: 128 op, 488207500.00 ns, 3.8141 ms/op
WorkloadActual   7: 128 op, 488869500.00 ns, 3.8193 ms/op
WorkloadActual   8: 128 op, 496085900.00 ns, 3.8757 ms/op
WorkloadActual   9: 128 op, 492368400.00 ns, 3.8466 ms/op
WorkloadActual  10: 128 op, 497034400.00 ns, 3.8831 ms/op
WorkloadActual  11: 128 op, 502798100.00 ns, 3.9281 ms/op
WorkloadActual  12: 128 op, 494579000.00 ns, 3.8639 ms/op
WorkloadActual  13: 128 op, 487200600.00 ns, 3.8063 ms/op
WorkloadActual  14: 128 op, 494894900.00 ns, 3.8664 ms/op
WorkloadActual  15: 128 op, 490233500.00 ns, 3.8299 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 498018500.00 ns, 3.8908 ms/op
WorkloadResult   2: 128 op, 501882100.00 ns, 3.9210 ms/op
WorkloadResult   3: 128 op, 494294800.00 ns, 3.8617 ms/op
WorkloadResult   4: 128 op, 491638500.00 ns, 3.8409 ms/op
WorkloadResult   5: 128 op, 488294000.00 ns, 3.8148 ms/op
WorkloadResult   6: 128 op, 488206100.00 ns, 3.8141 ms/op
WorkloadResult   7: 128 op, 488868100.00 ns, 3.8193 ms/op
WorkloadResult   8: 128 op, 496084500.00 ns, 3.8757 ms/op
WorkloadResult   9: 128 op, 492367000.00 ns, 3.8466 ms/op
WorkloadResult  10: 128 op, 497033000.00 ns, 3.8831 ms/op
WorkloadResult  11: 128 op, 502796700.00 ns, 3.9281 ms/op
WorkloadResult  12: 128 op, 494577600.00 ns, 3.8639 ms/op
WorkloadResult  13: 128 op, 487199200.00 ns, 3.8062 ms/op
WorkloadResult  14: 128 op, 494893500.00 ns, 3.8664 ms/op
WorkloadResult  15: 128 op, 490232100.00 ns, 3.8299 ms/op
// GC:  47 34 18 214296328 128
// Threading:  0 0 128

// AfterAll
// Benchmark Process 16872 has exited with code 0.

Mean = 3.857 ms, StdErr = 0.010 ms (0.25%), N = 15, StdDev = 0.038 ms
Min = 3.806 ms, Q1 = 3.825 ms, Median = 3.862 ms, Q3 = 3.879 ms, Max = 3.928 ms
IQR = 0.055 ms, LowerFence = 3.742 ms, UpperFence = 3.961 ms
ConfidenceInterval = [3.817 ms; 3.898 ms] (CI 99.9%), Margin = 0.041 ms (1.05% of Mean)
Skewness = 0.36, Kurtosis = 1.91, MValue = 2

// ** Remained 2 (33.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 1680 1300 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserialize --job Default --benchmarkId 4 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 281900.00 ns, 281.9000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 82
   at BenchmarkDotNet.Autogenerated.Runnable_4.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 1119
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_4.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 976
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 15648 has exited with code -1.

// ** Remained 1 (16.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a6e76a88-9669-49a2-87b9-c5f243e1963a.dll --anonymousPipes 1668 996 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted --job Default --benchmarkId 5 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 265700.00 ns, 265.7000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 88
   at BenchmarkDotNet.Autogenerated.Runnable_5.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 1319
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_5.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 1176
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\a6e76a88-9669-49a2-87b9-c5f243e1963a\a6e76a88-9669-49a2-87b9-c5f243e1963a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 13804 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 0m from now) **
Successfully reverted power plan (GUID: 51a64abc-c70f-4f6c-a0c5-01cf195fd8e5 FriendlyName: ChrisTitus - Ultimate Power Plan)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.html

// * Detailed results *
FlexonBenchmarks.JsonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 2.438 ms, StdErr = 0.011 ms (0.46%), N = 14, StdDev = 0.042 ms
Min = 2.397 ms, Q1 = 2.402 ms, Median = 2.421 ms, Q3 = 2.461 ms, Max = 2.517 ms
IQR = 0.059 ms, LowerFence = 2.313 ms, UpperFence = 2.550 ms
ConfidenceInterval = [2.390 ms; 2.485 ms] (CI 99.9%), Margin = 0.048 ms (1.95% of Mean)
Skewness = 0.63, Kurtosis = 1.8, MValue = 2
-------------------- Histogram --------------------
[2.395 ms ; 2.530 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.JsonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 3.857 ms, StdErr = 0.010 ms (0.25%), N = 15, StdDev = 0.038 ms
Min = 3.806 ms, Q1 = 3.825 ms, Median = 3.862 ms, Q3 = 3.879 ms, Max = 3.928 ms
IQR = 0.055 ms, LowerFence = 3.742 ms, UpperFence = 3.961 ms
ConfidenceInterval = [3.817 ms; 3.898 ms] (CI 99.9%), Margin = 0.041 ms (1.05% of Mean)
Skewness = 0.36, Kurtosis = 1.91, MValue = 2
-------------------- Histogram --------------------
[3.786 ms ; 3.865 ms) | @@@@@@@@@
[3.865 ms ; 3.948 ms) | @@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19045.5371/22H2/2022Update)
Intel Core i5-6400 CPU 2.70GHz (Skylake), 1 CPU, 4 logical and 4 physical cores
.NET SDK=8.0.300
  [Host]     : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
  DefaultJob : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2


|                     Method |     Mean |     Error |    StdDev | Ratio | RatioSD |     Gen0 |     Gen1 |     Gen2 | Allocated | Alloc Ratio |
|--------------------------- |---------:|----------:|----------:|------:|--------:|---------:|---------:|---------:|----------:|------------:|
|              JsonSerialize | 2.438 ms | 0.0476 ms | 0.0422 ms |  1.00 |    0.00 |  97.6563 |  97.6563 |  97.6563 |  355530 B |        1.00 |
|            FlexonSerialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|   FlexonSerializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|            JsonDeserialize | 3.857 ms | 0.0406 ms | 0.0380 ms |  1.58 |    0.03 | 367.1875 | 265.6250 | 140.6250 | 1674190 B |        4.71 |
|          FlexonDeserialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
| FlexonDeserializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |

Benchmarks with issues:
  FlexonBenchmarks.FlexonSerialize: DefaultJob
  FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
  FlexonBenchmarks.FlexonDeserialize: DefaultJob
  FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

// * Warnings *
BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Hints *
Outliers
  FlexonBenchmarks.JsonSerialize: Default -> 1 outlier  was  removed (2.69 ms)

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Gen1        : GC Generation 1 collects per 1000 operations
  Gen2        : GC Generation 2 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:34 (34.96 sec), executed benchmarks: 6

Global total time: 00:00:47 (47.11 sec), executed benchmarks: 6
// * Artifacts cleanup *
