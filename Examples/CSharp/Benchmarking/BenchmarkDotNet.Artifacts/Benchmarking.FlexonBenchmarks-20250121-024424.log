// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49
// command took 2.74s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49
// command took 6.98s and exited with 0
// ***** Done, took 00:00:09 (9.91 sec)   *****
// Found 6 benchmarks:
//   FlexonBenchmarks.JsonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
//   FlexonBenchmarks.JsonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1384 1784 --benchmarkName Benchmarking.FlexonBenchmarks.JsonSerialize --job Default --benchmarkId 0 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 302100.00 ns, 302.1000 us/op
WorkloadJitting  1: 1 op, 10053700.00 ns, 10.0537 ms/op

OverheadJitting  2: 16 op, 343500.00 ns, 21.4688 us/op
WorkloadJitting  2: 16 op, 81743700.00 ns, 5.1090 ms/op

WorkloadPilot    1: 16 op, 65022800.00 ns, 4.0639 ms/op
WorkloadPilot    2: 32 op, 140846700.00 ns, 4.4015 ms/op
WorkloadPilot    3: 64 op, 310709000.00 ns, 4.8548 ms/op
WorkloadPilot    4: 128 op, 332432900.00 ns, 2.5971 ms/op
WorkloadPilot    5: 256 op, 625866500.00 ns, 2.4448 ms/op

OverheadWarmup   1: 256 op, 3300.00 ns, 12.8906 ns/op
OverheadWarmup   2: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadWarmup   3: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadWarmup   4: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadWarmup   5: 256 op, 7800.00 ns, 30.4688 ns/op
OverheadWarmup   6: 256 op, 1600.00 ns, 6.2500 ns/op

OverheadActual   1: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadActual   2: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadActual   3: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual   4: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadActual   5: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual   6: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   7: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual   8: 256 op, 2300.00 ns, 8.9844 ns/op
OverheadActual   9: 256 op, 2400.00 ns, 9.3750 ns/op
OverheadActual  10: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  11: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual  12: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadActual  13: 256 op, 2600.00 ns, 10.1562 ns/op
OverheadActual  14: 256 op, 2300.00 ns, 8.9844 ns/op
OverheadActual  15: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  16: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  17: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual  18: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual  19: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  20: 256 op, 8000.00 ns, 31.2500 ns/op

WorkloadWarmup   1: 256 op, 602342700.00 ns, 2.3529 ms/op
WorkloadWarmup   2: 256 op, 608523300.00 ns, 2.3770 ms/op
WorkloadWarmup   3: 256 op, 613829800.00 ns, 2.3978 ms/op
WorkloadWarmup   4: 256 op, 614778600.00 ns, 2.4015 ms/op
WorkloadWarmup   5: 256 op, 603185300.00 ns, 2.3562 ms/op
WorkloadWarmup   6: 256 op, 621733700.00 ns, 2.4286 ms/op
WorkloadWarmup   7: 256 op, 627971300.00 ns, 2.4530 ms/op
WorkloadWarmup   8: 256 op, 610423000.00 ns, 2.3845 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 588492300.00 ns, 2.2988 ms/op
WorkloadActual   2: 256 op, 618311100.00 ns, 2.4153 ms/op
WorkloadActual   3: 256 op, 611176600.00 ns, 2.3874 ms/op
WorkloadActual   4: 256 op, 608042300.00 ns, 2.3752 ms/op
WorkloadActual   5: 256 op, 622712700.00 ns, 2.4325 ms/op
WorkloadActual   6: 256 op, 603534800.00 ns, 2.3576 ms/op
WorkloadActual   7: 256 op, 621082800.00 ns, 2.4261 ms/op
WorkloadActual   8: 256 op, 606786200.00 ns, 2.3703 ms/op
WorkloadActual   9: 256 op, 614924700.00 ns, 2.4020 ms/op
WorkloadActual  10: 256 op, 616756200.00 ns, 2.4092 ms/op
WorkloadActual  11: 256 op, 612373200.00 ns, 2.3921 ms/op
WorkloadActual  12: 256 op, 620567000.00 ns, 2.4241 ms/op
WorkloadActual  13: 256 op, 627738200.00 ns, 2.4521 ms/op
WorkloadActual  14: 256 op, 610628800.00 ns, 2.3853 ms/op
WorkloadActual  15: 256 op, 613581900.00 ns, 2.3968 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 588490350.00 ns, 2.2988 ms/op
WorkloadResult   2: 256 op, 618309150.00 ns, 2.4153 ms/op
WorkloadResult   3: 256 op, 611174650.00 ns, 2.3874 ms/op
WorkloadResult   4: 256 op, 608040350.00 ns, 2.3752 ms/op
WorkloadResult   5: 256 op, 622710750.00 ns, 2.4325 ms/op
WorkloadResult   6: 256 op, 603532850.00 ns, 2.3576 ms/op
WorkloadResult   7: 256 op, 621080850.00 ns, 2.4261 ms/op
WorkloadResult   8: 256 op, 606784250.00 ns, 2.3703 ms/op
WorkloadResult   9: 256 op, 614922750.00 ns, 2.4020 ms/op
WorkloadResult  10: 256 op, 616754250.00 ns, 2.4092 ms/op
WorkloadResult  11: 256 op, 612371250.00 ns, 2.3921 ms/op
WorkloadResult  12: 256 op, 620565050.00 ns, 2.4241 ms/op
WorkloadResult  13: 256 op, 627736250.00 ns, 2.4521 ms/op
WorkloadResult  14: 256 op, 610626850.00 ns, 2.3853 ms/op
WorkloadResult  15: 256 op, 613579950.00 ns, 2.3968 ms/op
// GC:  25 25 25 91020872 256
// Threading:  0 0 256

// AfterAll
// Benchmark Process 18180 has exited with code 0.

Mean = 2.395 ms, StdErr = 0.010 ms (0.40%), N = 15, StdDev = 0.037 ms
Min = 2.299 ms, Q1 = 2.380 ms, Median = 2.397 ms, Q3 = 2.420 ms, Max = 2.452 ms
IQR = 0.039 ms, LowerFence = 2.321 ms, UpperFence = 2.479 ms
ConfidenceInterval = [2.356 ms; 2.434 ms] (CI 99.9%), Margin = 0.039 ms (1.64% of Mean)
Skewness = -0.88, Kurtosis = 3.73, MValue = 2

// ** Remained 5 (83.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:46 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1748 1372 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerialize --job Default --benchmarkId 1 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 310800.00 ns, 310.8000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 63
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 519
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 376
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 18352 has exited with code -1.

// ** Remained 4 (66.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:45 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1372 588 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted --job Default --benchmarkId 2 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 297700.00 ns, 297.7000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 69
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 719
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 576
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 17416 has exited with code -1.

// ** Remained 3 (50.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:45 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1676 1668 --benchmarkName Benchmarking.FlexonBenchmarks.JsonDeserialize --job Default --benchmarkId 3 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 318000.00 ns, 318.0000 us/op
WorkloadJitting  1: 1 op, 7327100.00 ns, 7.3271 ms/op

OverheadJitting  2: 16 op, 384100.00 ns, 24.0063 us/op
WorkloadJitting  2: 16 op, 105113300.00 ns, 6.5696 ms/op

WorkloadPilot    1: 16 op, 105022100.00 ns, 6.5639 ms/op
WorkloadPilot    2: 32 op, 213297400.00 ns, 6.6655 ms/op
WorkloadPilot    3: 64 op, 542717500.00 ns, 8.4800 ms/op

OverheadWarmup   1: 64 op, 2700.00 ns, 42.1875 ns/op
OverheadWarmup   2: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadWarmup   3: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadWarmup   4: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadWarmup   5: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadWarmup   6: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadWarmup   7: 64 op, 1300.00 ns, 20.3125 ns/op

OverheadActual   1: 64 op, 1900.00 ns, 29.6875 ns/op
OverheadActual   2: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   3: 64 op, 1600.00 ns, 25.0000 ns/op
OverheadActual   4: 64 op, 1400.00 ns, 21.8750 ns/op
OverheadActual   5: 64 op, 1800.00 ns, 28.1250 ns/op
OverheadActual   6: 64 op, 1900.00 ns, 29.6875 ns/op
OverheadActual   7: 64 op, 1600.00 ns, 25.0000 ns/op
OverheadActual   8: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   9: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  10: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  11: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  12: 64 op, 900.00 ns, 14.0625 ns/op
OverheadActual  13: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  14: 64 op, 1600.00 ns, 25.0000 ns/op
OverheadActual  15: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual  16: 64 op, 2400.00 ns, 37.5000 ns/op
OverheadActual  17: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  18: 64 op, 1900.00 ns, 29.6875 ns/op
OverheadActual  19: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  20: 64 op, 1300.00 ns, 20.3125 ns/op

WorkloadWarmup   1: 64 op, 396075700.00 ns, 6.1887 ms/op
WorkloadWarmup   2: 64 op, 323864800.00 ns, 5.0604 ms/op
WorkloadWarmup   3: 64 op, 261142500.00 ns, 4.0804 ms/op
WorkloadWarmup   4: 64 op, 250958700.00 ns, 3.9212 ms/op
WorkloadWarmup   5: 64 op, 248423500.00 ns, 3.8816 ms/op
WorkloadWarmup   6: 64 op, 250138800.00 ns, 3.9084 ms/op
WorkloadWarmup   7: 64 op, 253663400.00 ns, 3.9635 ms/op
WorkloadWarmup   8: 64 op, 247669000.00 ns, 3.8698 ms/op
WorkloadWarmup   9: 64 op, 249676500.00 ns, 3.9012 ms/op
WorkloadWarmup  10: 64 op, 245926800.00 ns, 3.8426 ms/op

// BeforeActualRun
WorkloadActual   1: 64 op, 251130600.00 ns, 3.9239 ms/op
WorkloadActual   2: 64 op, 247982100.00 ns, 3.8747 ms/op
WorkloadActual   3: 64 op, 243267800.00 ns, 3.8011 ms/op
WorkloadActual   4: 64 op, 249878900.00 ns, 3.9044 ms/op
WorkloadActual   5: 64 op, 246138500.00 ns, 3.8459 ms/op
WorkloadActual   6: 64 op, 242178400.00 ns, 3.7840 ms/op
WorkloadActual   7: 64 op, 242054800.00 ns, 3.7821 ms/op
WorkloadActual   8: 64 op, 246467700.00 ns, 3.8511 ms/op
WorkloadActual   9: 64 op, 249070900.00 ns, 3.8917 ms/op
WorkloadActual  10: 64 op, 247528500.00 ns, 3.8676 ms/op
WorkloadActual  11: 64 op, 250929900.00 ns, 3.9208 ms/op
WorkloadActual  12: 64 op, 251924800.00 ns, 3.9363 ms/op
WorkloadActual  13: 64 op, 248226500.00 ns, 3.8785 ms/op
WorkloadActual  14: 64 op, 249885900.00 ns, 3.9045 ms/op
WorkloadActual  15: 64 op, 254797600.00 ns, 3.9812 ms/op

// AfterActualRun
WorkloadResult   1: 64 op, 251129300.00 ns, 3.9239 ms/op
WorkloadResult   2: 64 op, 247980800.00 ns, 3.8747 ms/op
WorkloadResult   3: 64 op, 243266500.00 ns, 3.8010 ms/op
WorkloadResult   4: 64 op, 249877600.00 ns, 3.9043 ms/op
WorkloadResult   5: 64 op, 246137200.00 ns, 3.8459 ms/op
WorkloadResult   6: 64 op, 242177100.00 ns, 3.7840 ms/op
WorkloadResult   7: 64 op, 242053500.00 ns, 3.7821 ms/op
WorkloadResult   8: 64 op, 246466400.00 ns, 3.8510 ms/op
WorkloadResult   9: 64 op, 249069600.00 ns, 3.8917 ms/op
WorkloadResult  10: 64 op, 247527200.00 ns, 3.8676 ms/op
WorkloadResult  11: 64 op, 250928600.00 ns, 3.9208 ms/op
WorkloadResult  12: 64 op, 251923500.00 ns, 3.9363 ms/op
WorkloadResult  13: 64 op, 248225200.00 ns, 3.8785 ms/op
WorkloadResult  14: 64 op, 249884600.00 ns, 3.9044 ms/op
WorkloadResult  15: 64 op, 254796300.00 ns, 3.9812 ms/op
// GC:  24 17 9 107148944 64
// Threading:  0 0 64

// AfterAll
// Benchmark Process 17568 has exited with code 0.

Mean = 3.877 ms, StdErr = 0.015 ms (0.38%), N = 15, StdDev = 0.057 ms
Min = 3.782 ms, Q1 = 3.848 ms, Median = 3.879 ms, Q3 = 3.913 ms, Max = 3.981 ms
IQR = 0.064 ms, LowerFence = 3.752 ms, UpperFence = 4.009 ms
ConfidenceInterval = [3.816 ms; 3.937 ms] (CI 99.9%), Margin = 0.061 ms (1.57% of Mean)
Skewness = -0.18, Kurtosis = 2.09, MValue = 2

// ** Remained 2 (33.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:45 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1392 1784 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserialize --job Default --benchmarkId 4 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 272400.00 ns, 272.4000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 82
   at BenchmarkDotNet.Autogenerated.Runnable_4.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 1119
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_4.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 976
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 19320 has exited with code -1.

// ** Remained 1 (16.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:45 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 6711b9bb-d4b7-4709-beb2-9e708150ae49.dll --anonymousPipes 1672 1384 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted --job Default --benchmarkId 5 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 270500.00 ns, 270.5000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 88
   at BenchmarkDotNet.Autogenerated.Runnable_5.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 1319
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_5.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 1176
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\6711b9bb-d4b7-4709-beb2-9e708150ae49\6711b9bb-d4b7-4709-beb2-9e708150ae49.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 1720 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:45 (0h 0m from now) **
Successfully reverted power plan (GUID: 51a64abc-c70f-4f6c-a0c5-01cf195fd8e5 FriendlyName: ChrisTitus - Ultimate Power Plan)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.html

// * Detailed results *
FlexonBenchmarks.JsonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 2.395 ms, StdErr = 0.010 ms (0.40%), N = 15, StdDev = 0.037 ms
Min = 2.299 ms, Q1 = 2.380 ms, Median = 2.397 ms, Q3 = 2.420 ms, Max = 2.452 ms
IQR = 0.039 ms, LowerFence = 2.321 ms, UpperFence = 2.479 ms
ConfidenceInterval = [2.356 ms; 2.434 ms] (CI 99.9%), Margin = 0.039 ms (1.64% of Mean)
Skewness = -0.88, Kurtosis = 3.73, MValue = 2
-------------------- Histogram --------------------
[2.279 ms ; 2.343 ms) | @
[2.343 ms ; 2.472 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.JsonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 3.877 ms, StdErr = 0.015 ms (0.38%), N = 15, StdDev = 0.057 ms
Min = 3.782 ms, Q1 = 3.848 ms, Median = 3.879 ms, Q3 = 3.913 ms, Max = 3.981 ms
IQR = 0.064 ms, LowerFence = 3.752 ms, UpperFence = 4.009 ms
ConfidenceInterval = [3.816 ms; 3.937 ms] (CI 99.9%), Margin = 0.061 ms (1.57% of Mean)
Skewness = -0.18, Kurtosis = 2.09, MValue = 2
-------------------- Histogram --------------------
[3.752 ms ; 3.857 ms) | @@@@@
[3.857 ms ; 4.011 ms) | @@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19045.5371/22H2/2022Update)
Intel Core i5-6400 CPU 2.70GHz (Skylake), 1 CPU, 4 logical and 4 physical cores
.NET SDK=8.0.300
  [Host]     : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
  DefaultJob : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2


|                     Method |     Mean |     Error |    StdDev | Ratio | RatioSD |     Gen0 |     Gen1 |     Gen2 | Allocated | Alloc Ratio |
|--------------------------- |---------:|----------:|----------:|------:|--------:|---------:|---------:|---------:|----------:|------------:|
|              JsonSerialize | 2.395 ms | 0.0393 ms | 0.0368 ms |  1.00 |    0.00 |  97.6563 |  97.6563 |  97.6563 |  355550 B |        1.00 |
|            FlexonSerialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|   FlexonSerializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|            JsonDeserialize | 3.877 ms | 0.0609 ms | 0.0569 ms |  1.62 |    0.04 | 375.0000 | 265.6250 | 140.6250 | 1674202 B |        4.71 |
|          FlexonDeserialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
| FlexonDeserializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |

Benchmarks with issues:
  FlexonBenchmarks.FlexonSerialize: DefaultJob
  FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
  FlexonBenchmarks.FlexonDeserialize: DefaultJob
  FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

// * Warnings *
BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Hints *
Outliers
  FlexonBenchmarks.JsonSerialize: Default -> 1 outlier  was  detected (2.30 ms)

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Gen1        : GC Generation 1 collects per 1000 operations
  Gen2        : GC Generation 2 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:28 (28.56 sec), executed benchmarks: 6

Global total time: 00:00:39 (39.12 sec), executed benchmarks: 6
// * Artifacts cleanup *
