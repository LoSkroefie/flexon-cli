// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac
// command took 5.27s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac
// command took 7.06s and exited with 0
// ***** Done, took 00:00:12 (12.54 sec)   *****
// Found 6 benchmarks:
//   FlexonBenchmarks.JsonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
//   FlexonBenchmarks.JsonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 1556 1860 --benchmarkName Benchmarking.FlexonBenchmarks.JsonSerialize --job Default --benchmarkId 0 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 334800.00 ns, 334.8000 us/op
WorkloadJitting  1: 1 op, 10382500.00 ns, 10.3825 ms/op

OverheadJitting  2: 16 op, 324900.00 ns, 20.3062 us/op
WorkloadJitting  2: 16 op, 122694600.00 ns, 7.6684 ms/op

WorkloadPilot    1: 16 op, 65714600.00 ns, 4.1072 ms/op
WorkloadPilot    2: 32 op, 137181400.00 ns, 4.2869 ms/op
WorkloadPilot    3: 64 op, 323145400.00 ns, 5.0491 ms/op
WorkloadPilot    4: 128 op, 356941000.00 ns, 2.7886 ms/op
WorkloadPilot    5: 256 op, 632485900.00 ns, 2.4706 ms/op

OverheadWarmup   1: 256 op, 3300.00 ns, 12.8906 ns/op
OverheadWarmup   2: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadWarmup   3: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadWarmup   4: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadWarmup   5: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadWarmup   6: 256 op, 5800.00 ns, 22.6562 ns/op
OverheadWarmup   7: 256 op, 1700.00 ns, 6.6406 ns/op

OverheadActual   1: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual   2: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual   3: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual   4: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   5: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   6: 256 op, 4000.00 ns, 15.6250 ns/op
OverheadActual   7: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   8: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual   9: 256 op, 1500.00 ns, 5.8594 ns/op
OverheadActual  10: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual  11: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual  12: 256 op, 3300.00 ns, 12.8906 ns/op
OverheadActual  13: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  14: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual  15: 256 op, 2400.00 ns, 9.3750 ns/op
OverheadActual  16: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  17: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual  18: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  19: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual  20: 256 op, 3100.00 ns, 12.1094 ns/op

WorkloadWarmup   1: 256 op, 616168400.00 ns, 2.4069 ms/op
WorkloadWarmup   2: 256 op, 611449800.00 ns, 2.3885 ms/op
WorkloadWarmup   3: 256 op, 610606900.00 ns, 2.3852 ms/op
WorkloadWarmup   4: 256 op, 644084200.00 ns, 2.5160 ms/op
WorkloadWarmup   5: 256 op, 599757400.00 ns, 2.3428 ms/op
WorkloadWarmup   6: 256 op, 602864400.00 ns, 2.3549 ms/op
WorkloadWarmup   7: 256 op, 601202500.00 ns, 2.3484 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 609747600.00 ns, 2.3818 ms/op
WorkloadActual   2: 256 op, 616906600.00 ns, 2.4098 ms/op
WorkloadActual   3: 256 op, 613193800.00 ns, 2.3953 ms/op
WorkloadActual   4: 256 op, 603102300.00 ns, 2.3559 ms/op
WorkloadActual   5: 256 op, 605733900.00 ns, 2.3661 ms/op
WorkloadActual   6: 256 op, 607561500.00 ns, 2.3733 ms/op
WorkloadActual   7: 256 op, 612751400.00 ns, 2.3936 ms/op
WorkloadActual   8: 256 op, 601645200.00 ns, 2.3502 ms/op
WorkloadActual   9: 256 op, 613384100.00 ns, 2.3960 ms/op
WorkloadActual  10: 256 op, 609740700.00 ns, 2.3818 ms/op
WorkloadActual  11: 256 op, 606175000.00 ns, 2.3679 ms/op
WorkloadActual  12: 256 op, 607538000.00 ns, 2.3732 ms/op
WorkloadActual  13: 256 op, 608355500.00 ns, 2.3764 ms/op
WorkloadActual  14: 256 op, 607120500.00 ns, 2.3716 ms/op
WorkloadActual  15: 256 op, 616476300.00 ns, 2.4081 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 609745850.00 ns, 2.3818 ms/op
WorkloadResult   2: 256 op, 616904850.00 ns, 2.4098 ms/op
WorkloadResult   3: 256 op, 613192050.00 ns, 2.3953 ms/op
WorkloadResult   4: 256 op, 603100550.00 ns, 2.3559 ms/op
WorkloadResult   5: 256 op, 605732150.00 ns, 2.3661 ms/op
WorkloadResult   6: 256 op, 607559750.00 ns, 2.3733 ms/op
WorkloadResult   7: 256 op, 612749650.00 ns, 2.3936 ms/op
WorkloadResult   8: 256 op, 601643450.00 ns, 2.3502 ms/op
WorkloadResult   9: 256 op, 613382350.00 ns, 2.3960 ms/op
WorkloadResult  10: 256 op, 609738950.00 ns, 2.3818 ms/op
WorkloadResult  11: 256 op, 606173250.00 ns, 2.3679 ms/op
WorkloadResult  12: 256 op, 607536250.00 ns, 2.3732 ms/op
WorkloadResult  13: 256 op, 608353750.00 ns, 2.3764 ms/op
WorkloadResult  14: 256 op, 607118750.00 ns, 2.3716 ms/op
WorkloadResult  15: 256 op, 616474550.00 ns, 2.4081 ms/op
// GC:  25 25 25 91022800 256
// Threading:  0 0 256

// AfterAll
// Benchmark Process 252 has exited with code 0.

Mean = 2.380 ms, StdErr = 0.005 ms (0.19%), N = 15, StdDev = 0.018 ms
Min = 2.350 ms, Q1 = 2.370 ms, Median = 2.376 ms, Q3 = 2.394 ms, Max = 2.410 ms
IQR = 0.025 ms, LowerFence = 2.333 ms, UpperFence = 2.431 ms
ConfidenceInterval = [2.361 ms; 2.399 ms] (CI 99.9%), Margin = 0.019 ms (0.79% of Mean)
Skewness = 0.14, Kurtosis = 1.91, MValue = 2

// ** Remained 5 (83.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:48 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 1208 1544 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerialize --job Default --benchmarkId 1 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 293400.00 ns, 293.4000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 63
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 519
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 376
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 3600 has exited with code -1.

// ** Remained 4 (66.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 1200 1204 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted --job Default --benchmarkId 2 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 275700.00 ns, 275.7000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 69
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 719
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 576
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 17144 has exited with code -1.

// ** Remained 3 (50.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 1560 1168 --benchmarkName Benchmarking.FlexonBenchmarks.JsonDeserialize --job Default --benchmarkId 3 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 283600.00 ns, 283.6000 us/op
WorkloadJitting  1: 1 op, 7229500.00 ns, 7.2295 ms/op

OverheadJitting  2: 16 op, 316800.00 ns, 19.8000 us/op
WorkloadJitting  2: 16 op, 109523700.00 ns, 6.8452 ms/op

WorkloadPilot    1: 16 op, 104593600.00 ns, 6.5371 ms/op
WorkloadPilot    2: 32 op, 211543300.00 ns, 6.6107 ms/op
WorkloadPilot    3: 64 op, 538591700.00 ns, 8.4155 ms/op

OverheadWarmup   1: 64 op, 3500.00 ns, 54.6875 ns/op
OverheadWarmup   2: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadWarmup   3: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadWarmup   4: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadWarmup   5: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadWarmup   6: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadWarmup   7: 64 op, 1000.00 ns, 15.6250 ns/op

OverheadActual   1: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual   2: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   3: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual   4: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual   5: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadActual   6: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual   7: 64 op, 1900.00 ns, 29.6875 ns/op
OverheadActual   8: 64 op, 1500.00 ns, 23.4375 ns/op
OverheadActual   9: 64 op, 1700.00 ns, 26.5625 ns/op
OverheadActual  10: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  11: 64 op, 900.00 ns, 14.0625 ns/op
OverheadActual  12: 64 op, 900.00 ns, 14.0625 ns/op
OverheadActual  13: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  14: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  15: 64 op, 900.00 ns, 14.0625 ns/op
OverheadActual  16: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadActual  17: 64 op, 1900.00 ns, 29.6875 ns/op
OverheadActual  18: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual  19: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  20: 64 op, 1100.00 ns, 17.1875 ns/op

WorkloadWarmup   1: 64 op, 392768300.00 ns, 6.1370 ms/op
WorkloadWarmup   2: 64 op, 260526900.00 ns, 4.0707 ms/op
WorkloadWarmup   3: 64 op, 250849200.00 ns, 3.9195 ms/op
WorkloadWarmup   4: 64 op, 250543400.00 ns, 3.9147 ms/op
WorkloadWarmup   5: 64 op, 248239900.00 ns, 3.8787 ms/op
WorkloadWarmup   6: 64 op, 247802300.00 ns, 3.8719 ms/op
WorkloadWarmup   7: 64 op, 251033800.00 ns, 3.9224 ms/op
WorkloadWarmup   8: 64 op, 253162400.00 ns, 3.9557 ms/op
WorkloadWarmup   9: 64 op, 247652400.00 ns, 3.8696 ms/op
WorkloadWarmup  10: 64 op, 246286300.00 ns, 3.8482 ms/op
WorkloadWarmup  11: 64 op, 250328200.00 ns, 3.9114 ms/op
WorkloadWarmup  12: 64 op, 248975000.00 ns, 3.8902 ms/op

// BeforeActualRun
WorkloadActual   1: 64 op, 250522300.00 ns, 3.9144 ms/op
WorkloadActual   2: 64 op, 252494100.00 ns, 3.9452 ms/op
WorkloadActual   3: 64 op, 253331800.00 ns, 3.9583 ms/op
WorkloadActual   4: 64 op, 249457200.00 ns, 3.8978 ms/op
WorkloadActual   5: 64 op, 250496000.00 ns, 3.9140 ms/op
WorkloadActual   6: 64 op, 244156500.00 ns, 3.8149 ms/op
WorkloadActual   7: 64 op, 247676900.00 ns, 3.8700 ms/op
WorkloadActual   8: 64 op, 246795300.00 ns, 3.8562 ms/op
WorkloadActual   9: 64 op, 253490900.00 ns, 3.9608 ms/op
WorkloadActual  10: 64 op, 245865500.00 ns, 3.8416 ms/op
WorkloadActual  11: 64 op, 245144800.00 ns, 3.8304 ms/op
WorkloadActual  12: 64 op, 244399000.00 ns, 3.8187 ms/op
WorkloadActual  13: 64 op, 247423100.00 ns, 3.8660 ms/op
WorkloadActual  14: 64 op, 249139300.00 ns, 3.8928 ms/op
WorkloadActual  15: 64 op, 247467700.00 ns, 3.8667 ms/op

// AfterActualRun
WorkloadResult   1: 64 op, 250521150.00 ns, 3.9144 ms/op
WorkloadResult   2: 64 op, 252492950.00 ns, 3.9452 ms/op
WorkloadResult   3: 64 op, 253330650.00 ns, 3.9583 ms/op
WorkloadResult   4: 64 op, 249456050.00 ns, 3.8978 ms/op
WorkloadResult   5: 64 op, 250494850.00 ns, 3.9140 ms/op
WorkloadResult   6: 64 op, 244155350.00 ns, 3.8149 ms/op
WorkloadResult   7: 64 op, 247675750.00 ns, 3.8699 ms/op
WorkloadResult   8: 64 op, 246794150.00 ns, 3.8562 ms/op
WorkloadResult   9: 64 op, 253489750.00 ns, 3.9608 ms/op
WorkloadResult  10: 64 op, 245864350.00 ns, 3.8416 ms/op
WorkloadResult  11: 64 op, 245143650.00 ns, 3.8304 ms/op
WorkloadResult  12: 64 op, 244397850.00 ns, 3.8187 ms/op
WorkloadResult  13: 64 op, 247421950.00 ns, 3.8660 ms/op
WorkloadResult  14: 64 op, 249138150.00 ns, 3.8928 ms/op
WorkloadResult  15: 64 op, 247466550.00 ns, 3.8667 ms/op
// GC:  22 16 9 107152040 64
// Threading:  0 0 64

// AfterAll
// Benchmark Process 18464 has exited with code 0.

Mean = 3.883 ms, StdErr = 0.012 ms (0.32%), N = 15, StdDev = 0.048 ms
Min = 3.815 ms, Q1 = 3.849 ms, Median = 3.870 ms, Q3 = 3.914 ms, Max = 3.961 ms
IQR = 0.065 ms, LowerFence = 3.751 ms, UpperFence = 4.012 ms
ConfidenceInterval = [3.832 ms; 3.935 ms] (CI 99.9%), Margin = 0.052 ms (1.33% of Mean)
Skewness = 0.21, Kurtosis = 1.67, MValue = 2

// ** Remained 2 (33.3%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 1536 1172 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserialize --job Default --benchmarkId 4 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 294500.00 ns, 294.5000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 82
   at BenchmarkDotNet.Autogenerated.Runnable_4.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 1119
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_4.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 976
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 17064 has exited with code -1.

// ** Remained 1 (16.7%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.dll --anonymousPipes 980 1588 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted --job Default --benchmarkId 5 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 299400.00 ns, 299.4000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\FlexonCLI\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 88
   at BenchmarkDotNet.Autogenerated.Runnable_5.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 1319
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_5.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 1176
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac\dbaff5cb-60ec-4456-b958-ca0c2eb8ddac.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 8840 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-01-21 2:47 (0h 0m from now) **
Successfully reverted power plan (GUID: 51a64abc-c70f-4f6c-a0c5-01cf195fd8e5 FriendlyName: ChrisTitus - Ultimate Power Plan)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.html

// * Detailed results *
FlexonBenchmarks.JsonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 2.380 ms, StdErr = 0.005 ms (0.19%), N = 15, StdDev = 0.018 ms
Min = 2.350 ms, Q1 = 2.370 ms, Median = 2.376 ms, Q3 = 2.394 ms, Max = 2.410 ms
IQR = 0.025 ms, LowerFence = 2.333 ms, UpperFence = 2.431 ms
ConfidenceInterval = [2.361 ms; 2.399 ms] (CI 99.9%), Margin = 0.019 ms (0.79% of Mean)
Skewness = 0.14, Kurtosis = 1.91, MValue = 2
-------------------- Histogram --------------------
[2.341 ms ; 2.419 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.JsonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 3.883 ms, StdErr = 0.012 ms (0.32%), N = 15, StdDev = 0.048 ms
Min = 3.815 ms, Q1 = 3.849 ms, Median = 3.870 ms, Q3 = 3.914 ms, Max = 3.961 ms
IQR = 0.065 ms, LowerFence = 3.751 ms, UpperFence = 4.012 ms
ConfidenceInterval = [3.832 ms; 3.935 ms] (CI 99.9%), Margin = 0.052 ms (1.33% of Mean)
Skewness = 0.21, Kurtosis = 1.67, MValue = 2
-------------------- Histogram --------------------
[3.789 ms ; 3.986 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19045.5371/22H2/2022Update)
Intel Core i5-6400 CPU 2.70GHz (Skylake), 1 CPU, 4 logical and 4 physical cores
.NET SDK=8.0.300
  [Host]     : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
  DefaultJob : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2


|                     Method |     Mean |     Error |    StdDev | Ratio | RatioSD |     Gen0 |     Gen1 |     Gen2 | Allocated | Alloc Ratio |
|--------------------------- |---------:|----------:|----------:|------:|--------:|---------:|---------:|---------:|----------:|------------:|
|              JsonSerialize | 2.380 ms | 0.0188 ms | 0.0176 ms |  1.00 |    0.00 |  97.6563 |  97.6563 |  97.6563 |  355558 B |        1.00 |
|            FlexonSerialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|   FlexonSerializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|            JsonDeserialize | 3.883 ms | 0.0515 ms | 0.0482 ms |  1.63 |    0.02 | 343.7500 | 250.0000 | 140.6250 | 1674251 B |        4.71 |
|          FlexonDeserialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
| FlexonDeserializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |

Benchmarks with issues:
  FlexonBenchmarks.FlexonSerialize: DefaultJob
  FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
  FlexonBenchmarks.FlexonDeserialize: DefaultJob
  FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

// * Warnings *
BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Gen1        : GC Generation 1 collects per 1000 operations
  Gen2        : GC Generation 2 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:28 (28.15 sec), executed benchmarks: 6

Global total time: 00:00:41 (41.63 sec), executed benchmarks: 6
// * Artifacts cleanup *
