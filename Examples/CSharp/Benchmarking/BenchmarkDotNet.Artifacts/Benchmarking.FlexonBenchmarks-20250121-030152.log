// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e
// command took 3.38s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e
// command took 6.79s and exited with 0
// ***** Done, took 00:00:10 (10.42 sec)   *****
// Found 6 benchmarks:
//   FlexonBenchmarks.JsonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerialize: DefaultJob
//   FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
//   FlexonBenchmarks.JsonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserialize: DefaultJob
//   FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 1448 1440 --benchmarkName Benchmarking.FlexonBenchmarks.JsonSerialize --job Default --benchmarkId 0 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 338800.00 ns, 338.8000 us/op
WorkloadJitting  1: 1 op, 10109700.00 ns, 10.1097 ms/op

OverheadJitting  2: 16 op, 358900.00 ns, 22.4312 us/op
WorkloadJitting  2: 16 op, 83811100.00 ns, 5.2382 ms/op

WorkloadPilot    1: 16 op, 67325400.00 ns, 4.2078 ms/op
WorkloadPilot    2: 32 op, 137597000.00 ns, 4.2999 ms/op
WorkloadPilot    3: 64 op, 309763600.00 ns, 4.8401 ms/op
WorkloadPilot    4: 128 op, 342552900.00 ns, 2.6762 ms/op
WorkloadPilot    5: 256 op, 642158100.00 ns, 2.5084 ms/op

OverheadWarmup   1: 256 op, 2900.00 ns, 11.3281 ns/op
OverheadWarmup   2: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadWarmup   3: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadWarmup   4: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadWarmup   5: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadWarmup   6: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadWarmup   7: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadWarmup   8: 256 op, 1800.00 ns, 7.0312 ns/op

OverheadActual   1: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadActual   2: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual   3: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual   4: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual   5: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual   6: 256 op, 1700.00 ns, 6.6406 ns/op
OverheadActual   7: 256 op, 2200.00 ns, 8.5938 ns/op
OverheadActual   8: 256 op, 2500.00 ns, 9.7656 ns/op
OverheadActual   9: 256 op, 1800.00 ns, 7.0312 ns/op
OverheadActual  10: 256 op, 1900.00 ns, 7.4219 ns/op
OverheadActual  11: 256 op, 2100.00 ns, 8.2031 ns/op
OverheadActual  12: 256 op, 2300.00 ns, 8.9844 ns/op
OverheadActual  13: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual  14: 256 op, 1500.00 ns, 5.8594 ns/op
OverheadActual  15: 256 op, 1600.00 ns, 6.2500 ns/op
OverheadActual  16: 256 op, 2000.00 ns, 7.8125 ns/op
OverheadActual  17: 256 op, 2500.00 ns, 9.7656 ns/op
OverheadActual  18: 256 op, 2800.00 ns, 10.9375 ns/op
OverheadActual  19: 256 op, 6100.00 ns, 23.8281 ns/op
OverheadActual  20: 256 op, 2000.00 ns, 7.8125 ns/op

WorkloadWarmup   1: 256 op, 617749500.00 ns, 2.4131 ms/op
WorkloadWarmup   2: 256 op, 616133400.00 ns, 2.4068 ms/op
WorkloadWarmup   3: 256 op, 608197500.00 ns, 2.3758 ms/op
WorkloadWarmup   4: 256 op, 607307400.00 ns, 2.3723 ms/op
WorkloadWarmup   5: 256 op, 615068200.00 ns, 2.4026 ms/op
WorkloadWarmup   6: 256 op, 624816000.00 ns, 2.4407 ms/op
WorkloadWarmup   7: 256 op, 632982900.00 ns, 2.4726 ms/op
WorkloadWarmup   8: 256 op, 625799700.00 ns, 2.4445 ms/op
WorkloadWarmup   9: 256 op, 614384800.00 ns, 2.3999 ms/op
WorkloadWarmup  10: 256 op, 621395400.00 ns, 2.4273 ms/op
WorkloadWarmup  11: 256 op, 623166200.00 ns, 2.4342 ms/op
WorkloadWarmup  12: 256 op, 620911700.00 ns, 2.4254 ms/op

// BeforeActualRun
WorkloadActual   1: 256 op, 619493500.00 ns, 2.4199 ms/op
WorkloadActual   2: 256 op, 608552800.00 ns, 2.3772 ms/op
WorkloadActual   3: 256 op, 613304500.00 ns, 2.3957 ms/op
WorkloadActual   4: 256 op, 622709000.00 ns, 2.4325 ms/op
WorkloadActual   5: 256 op, 618732100.00 ns, 2.4169 ms/op
WorkloadActual   6: 256 op, 621742300.00 ns, 2.4287 ms/op
WorkloadActual   7: 256 op, 609051900.00 ns, 2.3791 ms/op
WorkloadActual   8: 256 op, 621216100.00 ns, 2.4266 ms/op
WorkloadActual   9: 256 op, 616541900.00 ns, 2.4084 ms/op
WorkloadActual  10: 256 op, 627541600.00 ns, 2.4513 ms/op
WorkloadActual  11: 256 op, 626824500.00 ns, 2.4485 ms/op
WorkloadActual  12: 256 op, 650694300.00 ns, 2.5418 ms/op
WorkloadActual  13: 256 op, 645206300.00 ns, 2.5203 ms/op
WorkloadActual  14: 256 op, 627155000.00 ns, 2.4498 ms/op
WorkloadActual  15: 256 op, 642430800.00 ns, 2.5095 ms/op

// AfterActualRun
WorkloadResult   1: 256 op, 619491500.00 ns, 2.4199 ms/op
WorkloadResult   2: 256 op, 608550800.00 ns, 2.3772 ms/op
WorkloadResult   3: 256 op, 613302500.00 ns, 2.3957 ms/op
WorkloadResult   4: 256 op, 622707000.00 ns, 2.4324 ms/op
WorkloadResult   5: 256 op, 618730100.00 ns, 2.4169 ms/op
WorkloadResult   6: 256 op, 621740300.00 ns, 2.4287 ms/op
WorkloadResult   7: 256 op, 609049900.00 ns, 2.3791 ms/op
WorkloadResult   8: 256 op, 621214100.00 ns, 2.4266 ms/op
WorkloadResult   9: 256 op, 616539900.00 ns, 2.4084 ms/op
WorkloadResult  10: 256 op, 627539600.00 ns, 2.4513 ms/op
WorkloadResult  11: 256 op, 626822500.00 ns, 2.4485 ms/op
WorkloadResult  12: 256 op, 627153000.00 ns, 2.4498 ms/op
// GC:  25 25 25 91022288 256
// Threading:  0 0 256

// AfterAll
// Benchmark Process 18084 has exited with code 0.

Mean = 2.420 ms, StdErr = 0.007 ms (0.31%), N = 12, StdDev = 0.026 ms
Min = 2.377 ms, Q1 = 2.405 ms, Median = 2.423 ms, Q3 = 2.436 ms, Max = 2.451 ms
IQR = 0.031 ms, LowerFence = 2.358 ms, UpperFence = 2.483 ms
ConfidenceInterval = [2.387 ms; 2.452 ms] (CI 99.9%), Margin = 0.033 ms (1.35% of Mean)
Skewness = -0.35, Kurtosis = 1.72, MValue = 2

// ** Remained 5 (83.3%) benchmark(s) to run. Estimated finish 2025-01-21 3:04 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 920 1484 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerialize --job Default --benchmarkId 1 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 337200.00 ns, 337.2000 us/op
Trying to find FlexonCLI.dll at: c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 63
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 519
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 376
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 18456 has exited with code -1.

// ** Remained 4 (66.7%) benchmark(s) to run. Estimated finish 2025-01-21 3:03 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 1808 1864 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted --job Default --benchmarkId 2 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 309500.00 ns, 309.5000 us/op
Trying to find FlexonCLI.dll at: c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonSerializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 69
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 719
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 576
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 18556 has exited with code -1.

// ** Remained 3 (50.0%) benchmark(s) to run. Estimated finish 2025-01-21 3:02 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.JsonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 1800 1380 --benchmarkName Benchmarking.FlexonBenchmarks.JsonDeserialize --job Default --benchmarkId 3 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 348500.00 ns, 348.5000 us/op
WorkloadJitting  1: 1 op, 8540500.00 ns, 8.5405 ms/op

OverheadJitting  2: 16 op, 311900.00 ns, 19.4937 us/op
WorkloadJitting  2: 16 op, 110565600.00 ns, 6.9104 ms/op

WorkloadPilot    1: 16 op, 106101300.00 ns, 6.6313 ms/op
WorkloadPilot    2: 32 op, 225849700.00 ns, 7.0578 ms/op
WorkloadPilot    3: 64 op, 500769200.00 ns, 7.8245 ms/op

OverheadWarmup   1: 64 op, 2600.00 ns, 40.6250 ns/op
OverheadWarmup   2: 64 op, 3900.00 ns, 60.9375 ns/op
OverheadWarmup   3: 64 op, 1400.00 ns, 21.8750 ns/op
OverheadWarmup   4: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadWarmup   5: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadWarmup   6: 64 op, 2100.00 ns, 32.8125 ns/op

OverheadActual   1: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual   2: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   3: 64 op, 1200.00 ns, 18.7500 ns/op
OverheadActual   4: 64 op, 1600.00 ns, 25.0000 ns/op
OverheadActual   5: 64 op, 1700.00 ns, 26.5625 ns/op
OverheadActual   6: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   7: 64 op, 1300.00 ns, 20.3125 ns/op
OverheadActual   8: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadActual   9: 64 op, 1000.00 ns, 15.6250 ns/op
OverheadActual  10: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  11: 64 op, 1800.00 ns, 28.1250 ns/op
OverheadActual  12: 64 op, 1600.00 ns, 25.0000 ns/op
OverheadActual  13: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  14: 64 op, 1400.00 ns, 21.8750 ns/op
OverheadActual  15: 64 op, 1500.00 ns, 23.4375 ns/op
OverheadActual  16: 64 op, 2000.00 ns, 31.2500 ns/op
OverheadActual  17: 64 op, 1800.00 ns, 28.1250 ns/op
OverheadActual  18: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  19: 64 op, 1100.00 ns, 17.1875 ns/op
OverheadActual  20: 64 op, 1200.00 ns, 18.7500 ns/op

WorkloadWarmup   1: 64 op, 373383100.00 ns, 5.8341 ms/op
WorkloadWarmup   2: 64 op, 321505200.00 ns, 5.0235 ms/op
WorkloadWarmup   3: 64 op, 249788600.00 ns, 3.9029 ms/op
WorkloadWarmup   4: 64 op, 246132600.00 ns, 3.8458 ms/op
WorkloadWarmup   5: 64 op, 247767800.00 ns, 3.8714 ms/op
WorkloadWarmup   6: 64 op, 247138100.00 ns, 3.8615 ms/op
WorkloadWarmup   7: 64 op, 249689300.00 ns, 3.9014 ms/op
WorkloadWarmup   8: 64 op, 250383600.00 ns, 3.9122 ms/op
WorkloadWarmup   9: 64 op, 247745900.00 ns, 3.8710 ms/op

// BeforeActualRun
WorkloadActual   1: 64 op, 243496800.00 ns, 3.8046 ms/op
WorkloadActual   2: 64 op, 245423500.00 ns, 3.8347 ms/op
WorkloadActual   3: 64 op, 244764500.00 ns, 3.8244 ms/op
WorkloadActual   4: 64 op, 246599000.00 ns, 3.8531 ms/op
WorkloadActual   5: 64 op, 243369000.00 ns, 3.8026 ms/op
WorkloadActual   6: 64 op, 245482100.00 ns, 3.8357 ms/op
WorkloadActual   7: 64 op, 250445400.00 ns, 3.9132 ms/op
WorkloadActual   8: 64 op, 245256800.00 ns, 3.8321 ms/op
WorkloadActual   9: 64 op, 247145800.00 ns, 3.8617 ms/op
WorkloadActual  10: 64 op, 248557700.00 ns, 3.8837 ms/op
WorkloadActual  11: 64 op, 250498200.00 ns, 3.9140 ms/op
WorkloadActual  12: 64 op, 246729100.00 ns, 3.8551 ms/op
WorkloadActual  13: 64 op, 245374800.00 ns, 3.8340 ms/op
WorkloadActual  14: 64 op, 247605500.00 ns, 3.8688 ms/op
WorkloadActual  15: 64 op, 244943700.00 ns, 3.8272 ms/op

// AfterActualRun
WorkloadResult   1: 64 op, 243495500.00 ns, 3.8046 ms/op
WorkloadResult   2: 64 op, 245422200.00 ns, 3.8347 ms/op
WorkloadResult   3: 64 op, 244763200.00 ns, 3.8244 ms/op
WorkloadResult   4: 64 op, 246597700.00 ns, 3.8531 ms/op
WorkloadResult   5: 64 op, 243367700.00 ns, 3.8026 ms/op
WorkloadResult   6: 64 op, 245480800.00 ns, 3.8356 ms/op
WorkloadResult   7: 64 op, 250444100.00 ns, 3.9132 ms/op
WorkloadResult   8: 64 op, 245255500.00 ns, 3.8321 ms/op
WorkloadResult   9: 64 op, 247144500.00 ns, 3.8616 ms/op
WorkloadResult  10: 64 op, 248556400.00 ns, 3.8837 ms/op
WorkloadResult  11: 64 op, 250496900.00 ns, 3.9140 ms/op
WorkloadResult  12: 64 op, 246727800.00 ns, 3.8551 ms/op
WorkloadResult  13: 64 op, 245373500.00 ns, 3.8340 ms/op
WorkloadResult  14: 64 op, 247604200.00 ns, 3.8688 ms/op
WorkloadResult  15: 64 op, 244942400.00 ns, 3.8272 ms/op
// GC:  24 16 9 107149592 64
// Threading:  0 0 64

// AfterAll
// Benchmark Process 6904 has exited with code 0.

Mean = 3.850 ms, StdErr = 0.009 ms (0.23%), N = 15, StdDev = 0.034 ms
Min = 3.803 ms, Q1 = 3.830 ms, Median = 3.836 ms, Q3 = 3.865 ms, Max = 3.914 ms
IQR = 0.036 ms, LowerFence = 3.776 ms, UpperFence = 3.919 ms
ConfidenceInterval = [3.813 ms; 3.886 ms] (CI 99.9%), Margin = 0.036 ms (0.95% of Mean)
Skewness = 0.56, Kurtosis = 2.22, MValue = 2

// ** Remained 2 (33.3%) benchmark(s) to run. Estimated finish 2025-01-21 3:02 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 1448 1792 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserialize --job Default --benchmarkId 4 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 281600.00 ns, 281.6000 us/op
Trying to find FlexonCLI.dll at: c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserialize() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 82
   at BenchmarkDotNet.Autogenerated.Runnable_4.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 1119
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_4.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 976
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 9692 has exited with code -1.

// ** Remained 1 (16.7%) benchmark(s) to run. Estimated finish 2025-01-21 3:02 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 5a73290e-7615-4f3d-851c-843372b9dd8e.dll --anonymousPipes 816 1808 --benchmarkName Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted --job Default --benchmarkId 5 in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 338600.00 ns, 338.6000 us/op
Trying to find FlexonCLI.dll at: c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.FileNotFoundException: FlexonCLI not found at c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\bin\Release\net8.0\FlexonCLI.dll
   at Benchmarking.FlexonBenchmarks.RunFlexonCommand(String args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 101
   at Benchmarking.FlexonBenchmarks.FlexonDeserializeEncrypted() in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\Program.cs:line 88
   at BenchmarkDotNet.Autogenerated.Runnable_5.WorkloadActionNoUnroll(Int64 invokeCount) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 1319
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_5.Run(IHost host, String benchmarkName) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 1176
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in c:\Users\Administrator\source\repos\FlexonCLI\Examples\CSharp\Benchmarking\bin\Release\net8.0\5a73290e-7615-4f3d-851c-843372b9dd8e\5a73290e-7615-4f3d-851c-843372b9dd8e.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 10708 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-01-21 3:02 (0h 0m from now) **
Successfully reverted power plan (GUID: 51a64abc-c70f-4f6c-a0c5-01cf195fd8e5 FriendlyName: ChrisTitus - Ultimate Power Plan)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarking.FlexonBenchmarks-report.html

// * Detailed results *
FlexonBenchmarks.JsonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 2.420 ms, StdErr = 0.007 ms (0.31%), N = 12, StdDev = 0.026 ms
Min = 2.377 ms, Q1 = 2.405 ms, Median = 2.423 ms, Q3 = 2.436 ms, Max = 2.451 ms
IQR = 0.031 ms, LowerFence = 2.358 ms, UpperFence = 2.483 ms
ConfidenceInterval = [2.387 ms; 2.452 ms] (CI 99.9%), Margin = 0.033 ms (1.35% of Mean)
Skewness = -0.35, Kurtosis = 1.72, MValue = 2
-------------------- Histogram --------------------
[2.362 ms ; 2.466 ms) | @@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonSerialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.JsonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 3.850 ms, StdErr = 0.009 ms (0.23%), N = 15, StdDev = 0.034 ms
Min = 3.803 ms, Q1 = 3.830 ms, Median = 3.836 ms, Q3 = 3.865 ms, Max = 3.914 ms
IQR = 0.036 ms, LowerFence = 3.776 ms, UpperFence = 3.919 ms
ConfidenceInterval = [3.813 ms; 3.886 ms] (CI 99.9%), Margin = 0.036 ms (0.95% of Mean)
Skewness = 0.56, Kurtosis = 2.22, MValue = 2
-------------------- Histogram --------------------
[3.801 ms ; 3.932 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

FlexonBenchmarks.FlexonDeserialize: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob
Runtime = .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19045.5371/22H2/2022Update)
Intel Core i5-6400 CPU 2.70GHz (Skylake), 1 CPU, 4 logical and 4 physical cores
.NET SDK=8.0.300
  [Host]     : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2
  DefaultJob : .NET 8.0.5 (8.0.524.21615), X64 RyuJIT AVX2


|                     Method |     Mean |     Error |    StdDev | Ratio | RatioSD |     Gen0 |     Gen1 |     Gen2 | Allocated | Alloc Ratio |
|--------------------------- |---------:|----------:|----------:|------:|--------:|---------:|---------:|---------:|----------:|------------:|
|              JsonSerialize | 2.420 ms | 0.0328 ms | 0.0256 ms |  1.00 |    0.00 |  97.6563 |  97.6563 |  97.6563 |  355556 B |        1.00 |
|            FlexonSerialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|   FlexonSerializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
|            JsonDeserialize | 3.850 ms | 0.0364 ms | 0.0341 ms |  1.59 |    0.02 | 375.0000 | 250.0000 | 140.6250 | 1674212 B |        4.71 |
|          FlexonDeserialize |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |
| FlexonDeserializeEncrypted |       NA |        NA |        NA |     ? |       ? |        - |        - |        - |         - |           ? |

Benchmarks with issues:
  FlexonBenchmarks.FlexonSerialize: DefaultJob
  FlexonBenchmarks.FlexonSerializeEncrypted: DefaultJob
  FlexonBenchmarks.FlexonDeserialize: DefaultJob
  FlexonBenchmarks.FlexonDeserializeEncrypted: DefaultJob

// * Warnings *
BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Hints *
Outliers
  FlexonBenchmarks.JsonSerialize: Default -> 3 outliers were removed (2.51 ms..2.54 ms)

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Gen1        : GC Generation 1 collects per 1000 operations
  Gen2        : GC Generation 2 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:30 (30.85 sec), executed benchmarks: 6

Global total time: 00:00:41 (41.97 sec), executed benchmarks: 6
// * Artifacts cleanup *
